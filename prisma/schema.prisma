// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String   @id @default(cuid()) @db.VarChar(30)
  username     String   @unique @db.VarChar(100)
  email        String   @unique @db.VarChar(100)
  password     String   @db.Text
  profileImage String   @default("") @db.VarChar(1024)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  UserProfile UserProfile?

  @@index([username, email])
}

model UserProfile {
  id          String   @id @default(cuid()) @db.VarChar(30)
  userId      String   @unique @db.VarChar(30)
  fullname    String?  @db.VarChar(255)
  phoneNumber String?  @db.VarChar(15)
  address     String?  @db.Text
  latitude    Decimal? @db.Decimal(9, 6)
  longitude   Decimal? @db.Decimal(9, 6)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Brand {
  id        String   @id @default(cuid()) @db.VarChar(30)
  name      String   @unique @db.VarChar(50)
  imageUrl  String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Workshop Workshop[]
}

model Cars {
  id        String   @id @default(cuid()) @db.VarChar(30)
  imageUrls String[] @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workshop {
  id        String   @id @default(cuid()) @db.VarChar(30)
  name      String   @unique @db.VarChar(100)
  address   String   @db.Text
  latitude  Decimal  @db.Decimal(9, 6)
  longitude Decimal  @db.Decimal(9, 6)
  brandId   String   @db.VarChar(30)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  brand Brand @relation(fields: [brandId], references: [id], onDelete: Cascade)

  @@index([brandId])
}
